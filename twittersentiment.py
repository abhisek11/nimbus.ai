# -*- coding: utf-8 -*-
"""twittersentiment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Igj23NAJkCSPfg4ph7uQqRE4oB9ZMh5e
"""

!pip install pandas
!pip install tweepy
!pip install vaderSentiment
!pip install -U nltk[all]

import tweepy
import pandas as pd
from nltk.sentiment.vader import SentimentIntensityAnalyzer
import sys 
import os 
import datetime

#My Twitter API Authentication Variables
consumer_key = 'AMskkMrTiil0Re1iKuJcQHseH'
consumer_secret = 'fZ0nOB4IqqYka7P70EAVkHkRFeFjTYXC1dIuUaWn3gF8YiCp9a'
access_token = '3135870607-MXL8UNUuZEWcgHE6wdN2kTYpqumiQWC5FVNpnUR'
access_token_secret = 'qMtb33qKZeGyMxqYJVICOjTYNuqZUOyhIlNBIlyrJWmOW'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)
search_words = "shyamsteel -filter:retweets"
date_since = "2018-11-01"
tweets = tweepy.Cursor(api.search,
              q=search_words,
              lang="en",
              since=date_since).items(1000)

# for tweet in tweets:
#     print(tweet.created_at)
# tweets = api.search('shyam steel', count=1000000)


data = pd.DataFrame(data=[[tweet.text,tweet.created_at,tweet.user.screen_name,tweet.user.location,tweet.user.id,tweet.user.created_at,tweet.user.description] for tweet in tweets],
                    columns=['Tweets','date','user','location','id','join_date','profile_description'])

# date_data= pd.DataFrame(data=[tweet.created_at for tweet in tweets], columns=['date'])

# display(date_data.head(10
display(data.head(10))


# print(tweets[9].created_at)

import nltk
nltk.download('vader_lexicon')

sid = SentimentIntensityAnalyzer()


listy = []
final_list=[]

for index, row in data.iterrows():
  ss = sid.polarity_scores(row["Tweets"])
  listy.append(ss)
  
for alter_list in listy:
  alter_list['neg']=alter_list['neg'] * 100
  alter_list['neu']=alter_list['neu'] * 100
  alter_list['pos']=alter_list['pos'] * 100
  alter_list['compound']=alter_list['compound'] * 100
  if alter_list['compound'] > 0.0:
    alter_list['overall']='Positive'
  elif alter_list['compound'] == 0.0:
    alter_list['overall']='Neutral'
  else:
    alter_list['overall']='Negative'
  final_list.append(alter_list)
  
    
# print(final_list)
  
se = pd.Series(final_list)
# print(se)
data['polarity'] = se.values
# data['date']=date_data
from google.colab import drive
drive.mount('drive')

df = pd.DataFrame(data)
# saving the dataframe 
df.to_csv('tweets_polarity.csv')
!cp tweets_polarity.csv drive/My\ Drive/
display(data.head(1000))

